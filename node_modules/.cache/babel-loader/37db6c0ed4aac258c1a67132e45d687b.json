{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback, useState } from 'react';\nimport SignUp from '../Login/Signup/SignUp';\nimport Portal from '../Portal';\nimport { Background, ModalWrapper, ModalContent, CloseModalButton } from './ModalElements';\n\nconst Modal = ({\n  showModal,\n  setShowModal,\n  children\n}) => {\n  _s();\n\n  const modalRef = useRef();\n  console.log(children);\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  const [formToShow, setFormToShow] = useState(forms.signup);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(Portal, {\n      children: /*#__PURE__*/_jsxDEV(Background, {\n        ref: modalRef,\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n          showModal: showModal,\n          children: [/*#__PURE__*/_jsxDEV(ModalContent, {\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalContent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n            \"aria-label\": \"Close Modal\",\n            onClick: () => setShowModal(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Modal, \"UNr/NbwAj2v8uqBqmx4GE+bni2U=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Modal/Modal.js"],"names":["React","useRef","useEffect","useCallback","useState","SignUp","Portal","Background","ModalWrapper","ModalContent","CloseModalButton","Modal","showModal","setShowModal","children","modalRef","console","log","closeModal","e","current","target","keyPress","key","document","addEventListener","removeEventListener","formToShow","setFormToShow","forms","signup","prev"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,WAAjC,EAA8CC,QAA9C,QAA6D,OAA7D;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAIA,SAAQC,UAAR,EAAoBC,YAApB,EAAkCC,YAAlC,EAAgDC,gBAAhD,QAAuE,iBAAvE;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAAA;;AACnD,QAAMC,QAAQ,GAAGd,MAAM,EAAvB;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,QAAMI,UAAU,GAAGC,CAAC,IAAI;AACpB,QAAGJ,QAAQ,CAACK,OAAT,KAAqBD,CAAC,CAACE,MAA1B,EAAkC;AAC9BR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAJD;;AAMA,QAAMS,QAAQ,GAAGnB,WAAW,CAACgB,CAAC,IAAI;AAC9B,QAAGA,CAAC,CAACI,GAAF,KAAU,QAAV,IAAsBX,SAAzB,EAAoC;AAChCC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAJ2B,EAIzB,CAACA,YAAD,EAAeD,SAAf,CAJyB,CAA5B;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,QAArC;AACA,WAAM,MAAME,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,QAAxC,CAAZ;AACH,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAKA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAACyB,KAAK,CAACC,MAAP,CAA5C;AAEA,sBACI;AAAA,cACKlB,SAAS,gBACN,QAAC,MAAD;AAAA,6BACA,QAAC,UAAD;AAAY,QAAA,GAAG,EAAEG,QAAjB;AAA2B,QAAA,OAAO,EAAEG,UAApC;AAAA,+BAEI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEN,SAAzB;AAAA,kCACI,QAAC,YAAD;AAAA,sBACKE;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,gBAAD;AAAkB,0BAAW,aAA7B;AAA2C,YAAA,OAAO,EAAE,MAAMD,YAAY,CAACkB,IAAI,IAAI,CAACA,IAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADM,GAgBN;AAjBR,mBADJ;AAqBH,CA5CD;;GAAMpB,K;;KAAAA,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React,{useRef, useEffect, useCallback, useState} from 'react';\nimport SignUp from '../Login/Signup/SignUp';\nimport Portal from '../Portal';\n\n\n\nimport {Background, ModalWrapper, ModalContent, CloseModalButton} from './ModalElements';\n\n\n\n\nconst Modal = ({showModal, setShowModal, children}) => {\n    const modalRef = useRef();\n    console.log(children)\n\n    const closeModal = e => {\n        if(modalRef.current === e.target) {\n            setShowModal(false);\n        }\n    };\n\n    const keyPress = useCallback(e => {\n        if(e.key === 'Escape' && showModal) {\n            setShowModal(false)\n        }\n    }, [setShowModal, showModal])\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyPress);\n        return() => document.removeEventListener('keydown', keyPress);\n    }, [keyPress]);\n    \n    const [formToShow, setFormToShow] = useState(forms.signup)\n\n    return (\n        <>\n            {showModal ? (\n                <Portal>\n                <Background ref={modalRef} onClick={closeModal}>\n                {/* <animated.div style={animation}> */}\n                    <ModalWrapper showModal={showModal}>\n                        <ModalContent>\n                            {children}\n                        </ModalContent>\n                        <ModalContent>\n                           \n                        </ModalContent>\n                        <CloseModalButton aria-label='Close Modal' onClick={() => setShowModal(prev => !prev)}/>\n                    </ModalWrapper>\n                    {/* </animated.div> */}\n                </Background>\n                </Portal>\n            ) : null}\n        </>\n    );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}