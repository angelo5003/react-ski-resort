{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled from \"styled-components\";\nimport { css as _css } from \"styled-components\";\n\nvar _jsxFileName = \"/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Navbar/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { menuData } from '../../data/MenuData';\nimport { Button } from '../Button/ButtonElements';\nimport { Nav, Logo, MenuBars, NavMenu, NavMenuLinks, NavBtn } from './NavbarElements';\nimport SharedModal from '../Sharedmodal/SharedModal';\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"Navbar___StyledButton\",\n  componentId: \"sc-120oe5p-0\"\n})([\"margin-right:5px;\"]);\n\nconst Navbar = ({\n  toggle\n}) => {\n  _s();\n\n  const [navbar, setNavbar] = useState(false);\n  const location = useLocation();\n\n  const changeBackground = () => {\n    if (window.pageYOffset >= 60) {\n      setNavbar(true);\n    } else {\n      setNavbar(false);\n    }\n  };\n\n  useEffect(() => {\n    const watchScroll = () => {\n      window.addEventListener('scroll', changeBackground);\n    };\n\n    watchScroll();\n    return () => {\n      window.removeEventListener('sroll', changeBackground);\n    };\n  }, []);\n  let style = {\n    backgroundColor: navbar || location.pathname !== '/' ? '#000d1a' : 'transparent',\n    transition: '0.4s'\n  };\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(Logo, {\n      to: \"/\",\n      children: \"SKI RESORT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(MenuBars, {\n      onClick: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(NavMenu, {\n      children: menuData.map((item, index) => /*#__PURE__*/_jsxDEV(NavMenuLinks, {\n        to: item.link,\n        children: item.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(NavBtn, {\n      children: [/*#__PURE__*/_jsxDEV(_StyledButton, {\n        primary: \"true\",\n        round: \"true\",\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: \"true\",\n        round: \"true\",\n        onClick: openModal,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(SharedModal, {\n        showModal: showModal,\n        setShowModal: setShowModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Navbar, \"52eryn24vxCzW9IVDs4Rs3FiRJ4=\", false, function () {\n  return [useLocation];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Navbar/Navbar.js"],"names":["React","useState","useEffect","useLocation","menuData","Button","Nav","Logo","MenuBars","NavMenu","NavMenuLinks","NavBtn","SharedModal","Navbar","toggle","navbar","setNavbar","location","changeBackground","window","pageYOffset","watchScroll","addEventListener","removeEventListener","style","backgroundColor","pathname","transition","showModal","setShowModal","openModal","prev","map","item","index","link","title"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {menuData} from '../../data/MenuData';\nimport {Button} from '../Button/ButtonElements';\n\nimport {css} from 'styled-components/macro';\nimport {Nav, Logo, MenuBars, NavMenu, NavMenuLinks, NavBtn} from './NavbarElements';\n\nimport SharedModal from '../Sharedmodal/SharedModal';\n\nconst Navbar = ({toggle}) => {\n    const [navbar, setNavbar] = useState(false);\n    const location = useLocation();\n\n    const changeBackground = () => {\n        if(window.pageYOffset >= 60) {\n            setNavbar(true);\n        } else {\n            setNavbar(false);\n        }\n    };\n\n    useEffect(() => {\n        const watchScroll = () => {\n            window.addEventListener('scroll', changeBackground)\n        }\n\n        watchScroll()\n\n        return () => {\n            window.removeEventListener('sroll', changeBackground);\n        };\n    }, []);\n\n    let style = {\n        backgroundColor: navbar || location.pathname !=='/' ? '#000d1a' : 'transparent',\n        transition: '0.4s'\n    };\n\n        const [showModal, setShowModal] = useState(false);\n\n        const openModal = () => {\n            setShowModal (prev => !prev)\n        }\n\n    return (\n       <Nav style={style}>\n           <Logo to='/'>SKI RESORT</Logo>\n           <MenuBars onClick={toggle}/>\n           <NavMenu>\n               {menuData.map((item, index) => (\n                   <NavMenuLinks to={item.link} key={index}>\n                       {item.title}\n                   </NavMenuLinks>\n               ))}\n           </NavMenu>\n           <NavBtn>\n               <Button primary='true' round='true' css={`margin-right: 5px;`}>Contact Us</Button>\n               <Button primary='true' round='true' onClick={openModal}>Sign Up</Button>\n               <SharedModal showModal={showModal} setShowModal={setShowModal}/>\n           </NavBtn>\n       </Nav>\n    );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}