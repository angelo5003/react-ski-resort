{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport SlopePlan from '../../images/pistekaart saalbach.jpg';\nimport { GlobalStyle } from './GlobalStyle';\nimport { useSpring, animated } from 'react-spring';\nimport { Background, ModalWrapper, ModalImg, ModalContent, CloseModalButton } from './ModalElements';\n\nconst Modal = ({\n  showModal,\n  setShowModal\n}) => {\n  _s();\n\n  const modalRef = useRef();\n  const animation = useSpring({\n    config: {\n      duration: 250\n    },\n    opacity: showModal ? 1 : 0,\n    transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n\n    ;\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal ? /*#__PURE__*/_jsxDEV(Background, {\n      ref: modalRef,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        style: animation,\n        children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n          showModal: showModal,\n          children: [/*#__PURE__*/_jsxDEV(ModalImg, {\n            src: SlopePlan,\n            alt: \"slopeplan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Saalbach Hinterglemm Leogang Fieberbrunn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n            \"aria-label\": \"Close Modal\",\n            onClick: () => setShowModal(prev => !prev)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : null, \";\", /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Modal, \"v+8xQfdHkWl7ocSyEt0s8KDGwZY=\", false, function () {\n  return [useSpring];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Modal/Modal.js"],"names":["React","useRef","useEffect","useCallback","SlopePlan","GlobalStyle","useSpring","animated","Background","ModalWrapper","ModalImg","ModalContent","CloseModalButton","Modal","showModal","setShowModal","modalRef","animation","config","duration","opacity","transform","closeModal","e","current","target","keyPress","key","document","addEventListener","removeEventListener","prev"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAmD,OAAnD;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,cAAlC;AAGA,SAAQC,UAAR,EAAoBC,YAApB,EAAkCC,QAAlC,EAA4CC,YAA5C,EAA0DC,gBAA1D,QAAiF,iBAAjF;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAAA;;AACzC,QAAMC,QAAQ,GAAGf,MAAM,EAAvB;AAEA,QAAMgB,SAAS,GAAGX,SAAS,CAAC;AACxBY,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KADgB;AAIxBC,IAAAA,OAAO,EAAEN,SAAS,GAAG,CAAH,GAAO,CAJD;AAKxBO,IAAAA,SAAS,EAAEP,SAAS,GAAI,gBAAJ,GAAuB;AALnB,GAAD,CAA3B;;AAQA,QAAMQ,UAAU,GAAGC,CAAC,IAAI;AACpB,QAAGP,QAAQ,CAACQ,OAAT,KAAqBD,CAAC,CAACE,MAA1B,EAAkC;AAC9BV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AAAA;AACJ,GAJD;;AAMA,QAAMW,QAAQ,GAAGvB,WAAW,CAACoB,CAAC,IAAI;AAC9B,QAAGA,CAAC,CAACI,GAAF,KAAU,QAAV,IAAsBb,SAAzB,EAAoC;AAChCC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAJ2B,EAIzB,CAACA,YAAD,EAAeD,SAAf,CAJyB,CAA5B;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,QAArC;AACA,WAAM,MAAME,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,QAAxC,CAAZ;AACH,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAOA,sBACI;AAAA,eACKZ,SAAS,gBACN,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEE,QAAjB;AAA2B,MAAA,OAAO,EAAEM,UAApC;AAAA,6BACI,QAAC,QAAD,CAAU,GAAV;AAAc,QAAA,KAAK,EAAEL,SAArB;AAAA,+BACA,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEH,SAAzB;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,GAAG,EAAEV,SAAf;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,YAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI,QAAC,gBAAD;AAAkB,0BAAW,aAA7B;AAA2C,YAAA,OAAO,EAAE,MAAMW,YAAY,CAACgB,IAAI,IAAI,CAACA,IAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADM,GAYN,IAbR,oBAcI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADJ;AAkBH,CAhDD;;GAAMlB,K;UAGgBP,S;;;KAHhBO,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React,{useRef, useEffect, useCallback} from 'react';\n\nimport SlopePlan from '../../images/pistekaart saalbach.jpg';\nimport { GlobalStyle } from './GlobalStyle';\nimport {useSpring, animated} from 'react-spring';\n\n\nimport {Background, ModalWrapper, ModalImg, ModalContent, CloseModalButton} from './ModalElements';\n\n\n\n\nconst Modal = ({showModal, setShowModal}) => {\n    const modalRef = useRef();\n\n    const animation = useSpring({\n        config: {\n            duration: 250\n        },\n        opacity: showModal ? 1 : 0,\n        transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n    });\n\n    const closeModal = e => {\n        if(modalRef.current === e.target) {\n            setShowModal(false);\n        };\n    };\n\n    const keyPress = useCallback(e => {\n        if(e.key === 'Escape' && showModal) {\n            setShowModal(false)\n        }\n    }, [setShowModal, showModal])\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyPress);\n        return() => document.removeEventListener('keydown', keyPress);\n    }, [keyPress]);\n    \n    \n\n    return (\n        <>\n            {showModal ? (\n                <Background ref={modalRef} onClick={closeModal}>\n                    <animated.div style={animation}>\n                    <ModalWrapper showModal={showModal}>\n                        <ModalImg src={SlopePlan} alt='slopeplan' />\n                        <ModalContent>\n                            <h1>Saalbach Hinterglemm Leogang Fieberbrunn</h1>\n                        </ModalContent>\n                        <CloseModalButton aria-label='Close Modal' onClick={() => setShowModal(prev => !prev)} />\n                    </ModalWrapper>\n                    </animated.div>\n                </Background>\n            ) : null};\n            <GlobalStyle/>\n        </>\n    );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}