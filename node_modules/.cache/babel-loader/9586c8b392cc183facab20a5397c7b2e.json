{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Modal/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useCallback } from 'react'; // import SlopePlan from '../../images/pistekaart saalbach.jpg';\n// import {useSpring, animated} from 'react-spring';\n\nimport { SlopePlanData } from '../../data/SlopePlanData';\nimport { Background, ModalWrapper, ModalImg, ModalContent, CloseModalButton } from './ModalElements';\n\nconst Modal = ({\n  showModal,\n  setShowModal,\n  SlopePlanData\n}) => {\n  _s();\n\n  const modalRef = useRef(); // const animation = useSpring({\n  //     config: {\n  //         duration: 250\n  //     },\n  //     opacity: showModal ? 1 : 0,\n  //     transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n  // });\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  };\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n    }\n  }, [setShowModal, showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showModal ? /*#__PURE__*/_jsxDEV(Background, {\n      ref: modalRef,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(ModalWrapper, {\n        showModal: showModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalImg, {\n          src: SlopePlanData,\n          alt: \"slopeplan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CloseModalButton, {\n          \"aria-label\": \"Close Modal\",\n          onClick: () => setShowModal(prev => !prev)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(Modal, \"qF/Pl4YcG59WwEcydEIGkeENtPI=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/tonytolen/Desktop/react/my-ski-resort/my-ski-resort/src/components/Modal/Modal.js"],"names":["React","useRef","useEffect","useCallback","SlopePlanData","Background","ModalWrapper","ModalImg","ModalContent","CloseModalButton","Modal","showModal","setShowModal","modalRef","closeModal","e","current","target","keyPress","key","document","addEventListener","removeEventListener","prev"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAmD,OAAnD,C,CAEA;AACA;;AAEA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAAQC,UAAR,EAAoBC,YAApB,EAAkCC,QAAlC,EAA4CC,YAA5C,EAA0DC,gBAA1D,QAAiF,iBAAjF;;AAKA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,YAAZ;AAA0BR,EAAAA;AAA1B,CAAD,KAA8C;AAAA;;AACxD,QAAMS,QAAQ,GAAGZ,MAAM,EAAvB,CADwD,CAGxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMa,UAAU,GAAGC,CAAC,IAAI;AACpB,QAAGF,QAAQ,CAACG,OAAT,KAAqBD,CAAC,CAACE,MAA1B,EAAkC;AAC9BL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAJD;;AAMA,QAAMM,QAAQ,GAAGf,WAAW,CAACY,CAAC,IAAI;AAC9B,QAAGA,CAAC,CAACI,GAAF,KAAU,QAAV,IAAsBR,SAAzB,EAAoC;AAChCC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAJ2B,EAIzB,CAACA,YAAD,EAAeD,SAAf,CAJyB,CAA5B;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCH,QAArC;AACA,WAAM,MAAME,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCJ,QAAxC,CAAZ;AACH,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT;AAOA,sBACI;AAAA,cACKP,SAAS,gBACN,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEE,QAAjB;AAA2B,MAAA,OAAO,EAAEC,UAApC;AAAA,6BAEI,QAAC,YAAD;AAAc,QAAA,SAAS,EAAEH,SAAzB;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,GAAG,EAAGP,aAAhB;AAA+B,UAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI,QAAC,gBAAD;AAAkB,wBAAW,aAA7B;AAA2C,UAAA,OAAO,EAAE,MAAMQ,YAAY,CAACW,IAAI,IAAI,CAACA,IAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADM,GAaN;AAdR,mBADJ;AAkBH,CAhDD;;GAAMb,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React,{useRef, useEffect, useCallback} from 'react';\n\n// import SlopePlan from '../../images/pistekaart saalbach.jpg';\n// import {useSpring, animated} from 'react-spring';\n\nimport {SlopePlanData} from '../../data/SlopePlanData';\nimport {Background, ModalWrapper, ModalImg, ModalContent, CloseModalButton} from './ModalElements';\n\n\n\n\nconst Modal = ({showModal, setShowModal, SlopePlanData}) => {\n    const modalRef = useRef();\n\n    // const animation = useSpring({\n    //     config: {\n    //         duration: 250\n    //     },\n    //     opacity: showModal ? 1 : 0,\n    //     transform: showModal ? `translateY(0%)` : `translateY(-100%)`\n    // });\n\n    const closeModal = e => {\n        if(modalRef.current === e.target) {\n            setShowModal(false);\n        }\n    };\n\n    const keyPress = useCallback(e => {\n        if(e.key === 'Escape' && showModal) {\n            setShowModal(false)\n        }\n    }, [setShowModal, showModal])\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyPress);\n        return() => document.removeEventListener('keydown', keyPress);\n    }, [keyPress]);\n    \n    \n\n    return (\n        <>\n            {showModal ? (\n                <Background ref={modalRef} onClick={closeModal}>\n                {/* <animated.div style={animation}> */}\n                    <ModalWrapper showModal={showModal}>\n                        <ModalImg src= {SlopePlanData} alt='slopeplan' />\n                        <ModalContent>\n                            {/* <h1>Saalbach Hinterglemm Leogang Fieberbrunn</h1> */}\n                        </ModalContent>\n                        <CloseModalButton aria-label='Close Modal' onClick={() => setShowModal(prev => !prev)}/>\n                    </ModalWrapper>\n                    {/* </animated.div> */}\n                </Background>\n                \n            ) : null}\n        </>\n    );\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}